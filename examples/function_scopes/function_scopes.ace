# Functions with the same name can now exist, as long as they are in different scopes
func myFunc() {
    printf('%d\n', myFunc())    # will call itself
    func myFunc() {
        return "hello"
    }
    printf('%s\n', myFunc())    # will call the inner function
    return 1
}
myFunc()    # will crash, because there is no termination condition

# Arrow functions can now access the outer scope
const inOuterSope = 1
const arrowFunc = () => {
    return $inOuterSope
}
printf('%d\n', ($arrowFunc)())